Imports System
Imports System.Configuration
Imports System.Collections.Generic
Imports System.Linq
Imports System.Text
Imports System.Xml
Imports System.Collections
Imports System.IO
Imports System.Data.OleDb
'Imports System.Net.Mail

'Imports SDIVendingAutoCrib.WebPartnerFunctions.WebPSharedFunc ' GEZ 5/29/2012
Imports System.Web.Mail
Imports System.Web.UI


Module SDIVendingAutocrib

    Dim objStreamWriterLog As StreamWriter
    Dim objStreamWriterTransactions As StreamWriter
    Dim rootDir As String = "C:\SDIVendingAutoCrib"
    Dim logpath As String = "C:\SDIVendingAutoCrib\LOGS\SDIVendingAutoCribLog" & Now.Year & Now.Month & Now.Day & Now.GetHashCode & ".txt"
    Dim datapath As String = "C:\SDIVendingAutoCrib\DATA\SDIVendingAutoCribData" & Now.Year & Now.Month & Now.Day & Now.GetHashCode & ".xml"

    'Dim connectOR As New OleDbConnection("Provider=MSDAORA.1;Password=" & strPWD & ";User ID=" & strUID & ";Data Source=RPTG")
    Dim connectOR As New OleDbConnection(ConfigurationManager.ConnectionStrings("dbConnect").ConnectionString.ToString)


    Sub Main()

        Console.WriteLine("Start SDIVendingAutoCrib XML in")
        Console.WriteLine("")

        If Dir(rootDir, FileAttribute.Directory) = "" Then
            MkDir(rootDir)
        End If
        If Dir(rootDir & "\LOGS", FileAttribute.Directory) = "" Then
            MkDir(rootDir & "\LOGS")
        End If
        If Dir(rootDir & "\DATA", FileAttribute.Directory) = "" Then
            MkDir(rootDir & "\DATA")
        End If

        objStreamWriterLog = File.CreateText(logpath)
        objStreamWriterTransactions = File.CreateText(datapath)
        objStreamWriterLog.WriteLine("Update of SDIVendingAutoCrib Processing XML in " & Now())

        Dim bolError As Boolean = buildSDIVendingMachineIN()

        SendEmail(bolError)

        objStreamWriterLog.WriteLine("End of SDIVendingAutoCrib Processing XML out " & Now())
        objStreamWriterLog.Flush()
        objStreamWriterLog.Close()
        objStreamWriterTransactions.Flush()
        objStreamWriterTransactions.Close()

    End Sub

    Private Function buildSDIVendingMachineIN() As Boolean

        'Dim handler As net.autocrib.net24.AutoCribWS = New net.autocrib.net24.AutoCribWS
        Dim handler As net.autocrib.www24.AutoCribWS = New net.autocrib.www24.AutoCribWS

        'Dim SDIDepartments As XmlElement = handler.GetDepartments("smithandnephew-sandbox", "454D6SNH", "smithandnephew_sandbox")
        'Dim xDoc As XmlDocument = New XmlDocument()
        'xDoc.LoadXml(xDoc.OuterXml)

        'xDoc.Save("C:\\filesaved.xml")

        Console.WriteLine("Starting processing of AutoCrib ")
        objStreamWriterLog.WriteLine("Starting processing of AutoCrib ")

        Dim intLastTranID As Integer
        intLastTranID = getLastTranID()

        Dim SDITransactions As XmlElement
        Try
            SDITransactions = handler.GetTransactions("smithandnephew-memphis", "04041304", "", "", intLastTranID, "999999", "", "", "", "", "", "", "", "", "", "", "smithandnephew_memphis", "")
            'SDITransactions = handler.GetTransactions("smithandnephew-memphis", "00041450", "", "", intLastTranID, "", "", "", "", "", "", "", "", "", "", "", "smithandnephew_memphis", "") 'gez pull 4 records
        Catch ex As Exception

            Console.WriteLine("Error " & ex.Message)
            objStreamWriterLog.WriteLine("Error " & ex.Message)
            Exit Function
        End Try



        'retrieve transactions
        Try
            Console.WriteLine("the last tran ID being used is " & intLastTranID)
            objStreamWriterLog.WriteLine("the last tran  IDbeing used is " & intLastTranID)
            'Console.WriteLine(SDITransactions.InnerXml)
            If (SDITransactions.InnerXml = "") Then
                Console.WriteLine("No transactions for the given last tran ID " & intLastTranID)
                objStreamWriterLog.WriteLine("No transactions for the given last tran ID " & intLastTranID)
            Else
                objStreamWriterTransactions.WriteLine(SDITransactions.InnerXml)

                processTransactions(SDITransactions, intLastTranID)
            End If

        Catch ex As Exception
            Console.WriteLine(ex.ToString)
            objStreamWriterLog.WriteLine(ex.ToString)
        End Try

    End Function

    Private Function getLastTranID() As Integer

        Dim intLastTranID As Integer
        connectOR.Open()

        Dim commandOR1 As New OleDbCommand("Select NVL(MAX(A.TRANSACTION_NBR),0)" & vbCrLf & _
                " FROM sysadm.PS_ISA_AUTOCRB_TRX A", connectOR)

        Try
            intLastTranID = commandOR1.ExecuteScalar()

        Catch OleDBExp As OleDbException
            Console.WriteLine("")
            Console.WriteLine("***OLEDB error - " & OleDBExp.ToString)
            Console.WriteLine("")
            connectOR.Close()
            objStreamWriterLog.WriteLine("     Error - error reading transaction ID FROM Transaction table")
            Exit Function
        End Try
        connectOR.Close()


        Return intLastTranID

    End Function

    Private Sub processTransactions(ByVal Transactions As XmlNode, ByVal intLastTranID As Integer)

        Dim dsRows As New DataSet
        dsRows.ReadXml(New XmlNodeReader(Transactions))
        If dsRows.Tables(0).Rows.Count = 0 Then
            Console.WriteLine(" ERROR - no records loaded to dataset")
            Console.WriteLine("")
            objStreamWriterLog.WriteLine(" ERROR - no records loaded to dataset")
            Exit Sub
        Else
            objStreamWriterLog.WriteLine(" processing xml data")
        End If
        'process Oracle updates

        updateVndMchnDB(dsRows, intLastTranID)

    End Sub

    
    Private Sub updateVndMchnDB(ByVal dsRows As DataSet, ByVal intLastTranID As Integer)

        Dim intTranNo As Integer = 0
        Dim dteMyDate As DateTime
        Dim strStation As String = " "
        Dim strBin As String = " "
        Dim strType As String = " "
        Dim strItem As String = " "
        Dim intItemType As Integer = 0
        Dim intQuantity As Integer = 0
        Dim intPackQty As Integer = 0
        Dim strEmp As String = " "
        Dim strDepartment As String = " "
        Dim strJob As String = " "
        Dim strMachine As String = " "
        Dim strReason As String = " "
        Dim strOperation As String = " "
        Dim strSupplier As String = " "
        Dim strPoNo As String = " "
        Dim strTagNo As String = " "
        Dim strComment As String = " "
        Dim intBurnQty As Integer = 0
        Dim strLot As String = " "
        Dim strSerial As String = " "
        Dim intCurOnHand As Integer = 0
        Dim intCurBurn As Integer = 0
        Dim strPickTicketNo As String = " "
        Dim strPSlip As String = " "
        Dim decMAvgPrice As Decimal = 0.0
        Dim decMAvgCost As Decimal = 0.0
        Dim strExternalPO As String = " "
        Dim strItemRFID As String = " "
        Dim decStandardPrice As Decimal = 0.0
        Dim decAdjStdPrice As Decimal = 0.0
        Dim strVendorItem As String = " "
        Dim dteServerDateTime As DateTime
        Dim intBONo As Integer = 0

        Dim rowsAffected As Integer

        connectOR.Open()

        'compare last Tran ID and delete if less than or equal to
        Dim Y As Integer = dsRows.Tables("TranTypeRequest").Rows.Count
        Dim X As Integer = 0

        Do Until Y = 0
            If dsRows.Tables("TranTypeRequest").Rows(X).Item("TranNo") > intLastTranID Then
                X = X + 1
            Else
                dsRows.Tables("TranTypeRequest").Rows(X).Delete()

            End If
            Y = Y - 1
        Loop

        objStreamWriterLog.WriteLine("Number of rows to be inserted is " & X)

        'For I = 0 To dsRows.Tables(0).Rows.Count - 1
        '    If dsRows.Tables("TranTypeRequest").Rows(I).Item("datetime") < dteStartDateTime Then
        '        dsRows.Tables("TranTypeRequest").Rows(I).Delete()
        '    End If
        'Next
        dsRows.AcceptChanges()

        For I = 0 To dsRows.Tables("TranTypeRequest").Rows.Count - 1
            dteMyDate = New DateTime


            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("TranNo")) = "" Then
                intTranNo = dsRows.Tables("TranTypeRequest").Rows(I).Item("TranNo")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("MyDate")) = "" Then
                dteMyDate = dsRows.Tables("TranTypeRequest").Rows(I).Item("MyDate")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Station")) = "" Then
                strStation = dsRows.Tables("TranTypeRequest").Rows(I).Item("Station")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Bin")) = "" Then
                strBin = dsRows.Tables("TranTypeRequest").Rows(I).Item("Bin")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Type")) = "" Then
                strType = dsRows.Tables("TranTypeRequest").Rows(I).Item("Type")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Item")) = "" Then
                strItem = dsRows.Tables("TranTypeRequest").Rows(I).Item("Item")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("ItemType")) = "" Then
                intItemType = dsRows.Tables("TranTypeRequest").Rows(I).Item("ItemType")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Quantity")) = "" Then
                intQuantity = dsRows.Tables("TranTypeRequest").Rows(I).Item("Quantity")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("PackQty")) = "" Then
                intPackQty = dsRows.Tables("TranTypeRequest").Rows(I).Item("PackQty")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Emp")) = "" Then
                strEmp = dsRows.Tables("TranTypeRequest").Rows(I).Item("Emp")
            End If
            If strEmp.Length > 10 Then
                strEmp = strEmp.Substring(0, 10)
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Department")) = "" Then
                strDepartment = dsRows.Tables("TranTypeRequest").Rows(I).Item("Department")
            End If

            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Job")) = "" Then
                strJob = dsRows.Tables("TranTypeRequest").Rows(I).Item("Job")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Machine")) = "" Then
                strMachine = dsRows.Tables("TranTypeRequest").Rows(I).Item("Machine")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Reason")) = "" Then
                strReason = dsRows.Tables("TranTypeRequest").Rows(I).Item("Reason")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Operation")) = "" Then
                strOperation = dsRows.Tables("TranTypeRequest").Rows(I).Item("Operation")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Supplier")) = "" Then
                strSupplier = dsRows.Tables("TranTypeRequest").Rows(I).Item("Supplier")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("PoNo")) = "" Then
                strPoNo = dsRows.Tables("TranTypeRequest").Rows(I).Item("PoNo")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("TagNo")) = "" Then
                strTagNo = dsRows.Tables("TranTypeRequest").Rows(I).Item("TagNo")
            End If

            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Comment")) = "" Then
                strComment = dsRows.Tables("TranTypeRequest").Rows(I).Item("Comment")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("BurnQty")) = "" Then
                intBurnQty = dsRows.Tables("TranTypeRequest").Rows(I).Item("BurnQty")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Lot")) = "" Then
                strLot = dsRows.Tables("TranTypeRequest").Rows(I).Item("Lot")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("Serial")) = "" Then
                strSerial = dsRows.Tables("TranTypeRequest").Rows(I).Item("Serial")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("CurOnHand")) = "" Then
                intCurOnHand = dsRows.Tables("TranTypeRequest").Rows(I).Item("CurOnHand")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("CurBurn")) = "" Then
                intCurBurn = dsRows.Tables("TranTypeRequest").Rows(I).Item("CurBurn")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("PickTicketNo")) = "" Then
                strPickTicketNo = dsRows.Tables("TranTypeRequest").Rows(I).Item("PickTicketNo")
            End If

            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("PSlip")) = "" Then
                strPSlip = dsRows.Tables("TranTypeRequest").Rows(I).Item("PSlip")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("MAvgPrice")) = "" Then
                decMAvgPrice = dsRows.Tables("TranTypeRequest").Rows(I).Item("MAvgPrice")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("MAvgCost")) = "" Then
                decMAvgCost = dsRows.Tables("TranTypeRequest").Rows(I).Item("MAvgCost")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("ExternalPO")) = "" Then
                strExternalPO = dsRows.Tables("TranTypeRequest").Rows(I).Item("ExternalPO")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("ItemRFID")) = "" Then
                strItemRFID = dsRows.Tables("TranTypeRequest").Rows(I).Item("ItemRFID")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("StandardPrice")) = "" Then
                decStandardPrice = dsRows.Tables("TranTypeRequest").Rows(I).Item("StandardPrice")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("AdjStdPrice")) = "" Then
                decAdjStdPrice = dsRows.Tables("TranTypeRequest").Rows(I).Item("AdjStdPrice")
            End If

            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("VendorItem")) = "" Then
                strVendorItem = dsRows.Tables("TranTypeRequest").Rows(I).Item("VendorItem")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("ServerDateTime")) = "" Then
                dteServerDateTime = dsRows.Tables("TranTypeRequest").Rows(I).Item("ServerDateTime")
            End If
            If Not Trim(dsRows.Tables("TranTypeRequest").Rows(I).Item("BONo")) = "" Then
                intBONo = dsRows.Tables("TranTypeRequest").Rows(I).Item("BONo")
            End If
            Dim strSQL As String = ""

            strSQL = "INSERT INTO SYSADM.PS_ISA_AUTOCRB_TRX" & vbCrLf & _
                        " (TRANSACTION_NBR,DT_TIMESTAMP, ISA_SPRO_DEVICE," & vbCrLf & _
                        " ISA_AUTOCRIB_BIN,ISA_BIN_TYPE,INV_ITEM_ID," & vbCrLf & _
                        " INV_ITEM_TYPE,QTY,PACK_QTY_1," & vbCrLf & _
                        " ISA_EMPLOYEE_ID,ISA_CUST_CHARGE_CD,ISA_MACHINE_NO," & vbCrLf & _
                        " ISA_RECEIPT_CODE,ISA_TRANS_TYPE,VENDOR_ID," & vbCrLf & _
                        " PO_ID,TAG_NUMBER,COMMENT_TEXT," & vbCrLf & _
                        " ISA_BURN_QTY,LOT_ID,SERIAL_ID," & vbCrLf & _
                        " QTY_ONHAND,ISA_CUR_BURN,ISA_TICKETNO," & vbCrLf & _
                        " PACKSLIP_NO,AVG_INV_PRICE,TL_COST," & vbCrLf & _
                        " CUSTOMER_PO,ISA_ITEM_RFID,STANDARD_PRICE," & vbCrLf & _
                        " ADJUSTED_PRICE,ITM_ID_VNDR,MAINT_DTTM," & vbCrLf & _
                        " QTY_BACKORDER,PROCESS_STATUS,BUSINESS_UNIT_OM," & vbCrLf & _
                        " ORDER_NO)" & vbCrLf & _
                        " VALUES('" & intTranNo & "',"
            If dteMyDate = Nothing Then
                strSQL &= "NULL, "
            Else


                strSQL &= " TO_DATE('" & dteMyDate & "', 'MM/DD/YYYY HH:MI:SS AM'),"
            End If
            strSQL &= " '" & strStation & "'," & vbCrLf & _
                        " '" & strBin & "'," & vbCrLf & _
                        " '" & strType & "'," & vbCrLf & _
                        " '" & strItem & "'," & vbCrLf & _
                        " " & intItemType & "," & vbCrLf & _
                        " " & intQuantity & "," & vbCrLf & _
                        " " & intPackQty & "," & vbCrLf & _
                        " '" & strEmp & "'," & vbCrLf & _
                        " '" & strDepartment & strJob & "'," & vbCrLf & _
                        " '" & strMachine & "'," & vbCrLf & _
                        " '" & strReason & "'," & vbCrLf & _
                        " '" & strOperation & "'," & vbCrLf & _
                        " '" & strSupplier & "'," & vbCrLf & _
                        " '" & strPoNo & "'," & vbCrLf & _
                        " '" & strTagNo & "'," & vbCrLf & _
                        " '" & strComment & "'," & vbCrLf & _
                        " " & intBurnQty & "," & vbCrLf & _
                        " '" & strLot & "'," & vbCrLf & _
                        " '" & strSerial & "'," & vbCrLf & _
                        " " & intCurOnHand & "," & vbCrLf & _
                        " " & intCurBurn & "," & vbCrLf & _
                        " '" & strPickTicketNo & "'," & vbCrLf & _
                        " '" & strPSlip & "'," & vbCrLf & _
                        " " & decMAvgPrice & "," & vbCrLf & _
                        " " & decMAvgCost & "," & vbCrLf & _
                        " '" & strExternalPO & "'," & vbCrLf & _
                        " '" & strItemRFID & "'," & vbCrLf & _
                        " " & decStandardPrice & "," & vbCrLf & _
                        " " & decAdjStdPrice & "," & vbCrLf & _
                        " '" & strVendorItem & "'," & vbCrLf & _
                        " TO_DATE('" & dteServerDateTime & "', 'MM/DD/YYYY HH:MI:SS AM')," & vbCrLf & _
                        " " & intBONo & "," & vbCrLf & _
                        "'N',' ',' ')"
            Dim commandOR1 As New OleDbCommand(strSQL, connectOR)

            Try

                rowsAffected = commandOR1.ExecuteNonQuery()

            Catch OLEDBExp As OleDbException
                Console.WriteLine("")
                Console.WriteLine("***OLEDB error - " & OLEDBExp.ToString)
                Console.WriteLine("")
                Console.WriteLine(commandOR1.CommandText)
                Console.WriteLine("")
                objStreamWriterLog.WriteLine(OLEDBExp.ToString)
                objStreamWriterLog.WriteLine(commandOR1.CommandText)
                Exit Sub
            Finally
                'Do the final cleanup such as closing the Database connection
            End Try
        Next
        connectOR.Close()

    End Sub

    Private Sub SendEmail(ByVal bolError As Boolean)

        'sendCustEmail1()



        '''------

        'Dim email As New MailMessage

        ''The email address of the sender
        'email.From = New MailAddress("TechSupport@sdi.com")

        ''The email address of the recipient. 
        ''email.To.Add("bob.dougherty@sdi.com")
        'email.To.Add("George.Zitzler@sdi.com")
        ''The subject of the email
        If bolError = True Then
            sendCustEmail1()
            'email.Subject = "SDIVendingMachine IN Error"
        Else
            'email.Subject = "SDIVendingMachine has completed"
            'sendCustEmail1()
        End If

        ''The Priority attached and displayed for the email
        'email.Priority = MailPriority.High

        'If bolError = True Then
        'email.Body = "<html><body><table><tr><td>SDIVendingMachine IN with errors, review log.</td></tr>"
        'Else
        'email.Body = "<html><body><table><tr><td>SDIVendingMachine has completed</td></tr>"
        'End If
        'email.IsBodyHtml = True

        'Dim client As New System.Net.Mail.SmtpClient("127.0.0.1")

        ''Send the email and handle any error that occurs
        'Try
        'client.Send(email)

        'Catch mailException As Exception
        'objStreamWriterLog.WriteLine("     Error - the email was not sent")
        'End Try

    End Sub
    Public Sub sendCustEmail1

        Dim strbodyhead1 As String
        Dim strbodydet1 As String
        Dim txtBody1 As String
        Dim txtHdr1 As String
        Dim txtMsg1 As String
        Dim dataGridHTML1 As String
        Dim SBnstk1 As New StringBuilder
        Dim SWnstk1 As New StringWriter(SBnstk1)
        Dim htmlTWnstk1 As New HtmlTextWriter(SWnstk1)
        Dim bolSelectItem1 As Boolean

        Dim Mailer1 As MailMessage = New MailMessage
        Dim strccfirst1 As String = "george.zitzler;joe.rank@sdi.com;scott.doyle@sdi.com"
        Dim strcclast1 As String = "sdi.com"
        Mailer1.From = "Insiteonline@SDI.com"
        Mailer1.Cc = "george.zitzler@sdi.com;joe.rank@sdi.com;scott.doyle@sdi.com"
        Mailer1.Bcc = strccfirst1 & "@" & strcclast1
        strbodyhead1 = "<center><span style='font-family:Arial;font-size:X-Large;width:256px;'>SDI SDIVendingMachine IN Error</span></center>" & vbCrLf
        strbodyhead1 = strbodyhead1 & "<center><span ></span></center>"
        strbodyhead1 = strbodyhead1 & "&nbsp;" & vbCrLf

        Dim dtgEmail1 As WebControls.DataGrid
        dtgEmail1 = New WebControls.DataGrid

        'dtgEmail1.DataSource = dsEmail
        dtgEmail1.DataBind()

        dtgEmail1.CellPadding = 3
        dtgEmail1.Width.Percentage(90)

        'dtgPO.Columns(9).ItemStyle.HorizontalAlign = HorizontalAlign.Center
        dtgEmail1.RenderControl(htmlTWnstk1)
        dataGridHTML1 = SBnstk1.ToString()

        'Dim strPurchaserName As String = strCustID
        'Dim strPurchaserName As String = strFirstName & _
        '   " " & strLastName
        Dim ted As String = ";george.zitzler@sdi.com;joe.rank@sdi.com;scott.doyle@sdi.com"
        'Dim strPurchaserEmail As String = strEmail
        'Dim strPurchaserEmail As String = strEmail
        strbodydet1 = "&nbsp;" & vbCrLf
        strbodydet1 = strbodydet1 & "<div>"
        strbodydet1 = strbodydet1 & "<p >"
        'strbodydet1 = strbodydet1 & "&nbsp;<BR>"
        strbodydet1 = strbodydet1 & ""
        strbodydet1 = strbodydet1 & "<br>"
        'strbodydet1 = strbodydet1 & "&nbsp;<BR>"
        ' strbodydet1 = strbodydet1 & "Order Status:  " & strOrderStatDesc & " <br>"
        'strbodydet1 = strbodydet1 & "Order Number:  " & strOrderNo & " <br>"
        ' strbodydet1 = strbodydet1 & "Line Number:  " & strLineNbr & " <br>"
        strbodydet1 = strbodydet1 & "&nbsp;</p>"
        strbodydet1 = strbodydet1 & "<TABLE cellSpacing='1' cellPadding='1' width='100%' border='0'>" & vbCrLf
        strbodydet1 = strbodydet1 + "<TR><TD Class='DetailRow' width='100%'>" & dataGridHTML1 & "</TD></TR>"
        strbodydet1 = strbodydet1 + "<TR><TD Class='DetailRow'>&nbsp;</TD></TR>"
        strbodydet1 = strbodydet1 & "</TABLE>" & vbCrLf

        strbodydet1 = strbodydet1 & "&nbsp;<br>"
        strbodydet1 = strbodydet1 & "<br>"
        strbodydet1 = strbodydet1 & "&nbsp;<br>"
        strbodydet1 = strbodydet1 & "Data and logs are located on cpreplace2 at C:\SDIVendingAutoCrib <br>"
        strbodydet1 = strbodydet1 & "&nbsp;<br>"
        strbodydet1 = strbodydet1 & "</p>"
        strbodydet1 = strbodydet1 & "</div>"

        Mailer1.Body = strbodyhead1 & strbodydet1
        If connectOR.DataSource.ToUpper = "RPTG" Or _
            connectOR.DataSource.ToUpper = "DEVL" Or _
            connectOR.DataSource.ToUpper = "PLGR" Then
            'Mailer1.To = "DoNotSendPLGR@sdi.com"
            Mailer1.To = "george.zitzler@sdi.com"
            'Mailer1.To = strEmail
        Else
            'Mailer1.To = strPurchaserEmail
            'Mailer1.To = strEmail
            Mailer1.To = "george.zitzler@sdi.com;joe.rank@sdi.com;scott.doyle@sdi.com"
        End If

        'Mailer1.Subject = "In-Site® Online - Order Status records for" & Now.Month & "/" & Now.Day & "/" & Now.Year
        Mailer1.Subject = "SDIVendingMachine IN Error" 'GEZ
        Mailer1.BodyFormat = System.Web.Mail.MailFormat.Html
        'SmtpMail.Send(Mailer)
        'SendEmail(Mailer)
        UpdEmailOut.UpdEmailOut.UpdEmailOut(Mailer1.Subject, Mailer1.From, Mailer1.To, "", Mailer1.Bcc, "N", Mailer1.Body, connectOR)

    End Sub

End Module
